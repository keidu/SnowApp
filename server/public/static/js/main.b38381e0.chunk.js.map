{"version":3,"sources":["service/Auth.service.js","components/ui/Navbar.js","components/pages/Index.js","components/pages/Profile.js","components/auth/Signup.js","components/auth/Login.js","components/auth/EditUser.js","service/Lesson.service.js","components/ui/EmailButton.js","components/lessons/LessonCard.js","components/lessons/Dashboard.js","components/lessons/NewLesson.js","components/lessons/EditLesson.js","App.js","serviceWorker.js","index.js"],"names":["Services","signup","user","_service","post","editUser","login","username","password","loggedin","get","logout","this","axios","create","baseURL","process","withCredentials","Navigation","props","logoutUser","then","x","setUser","catch","err","console","log","Service","saludo","loggedInUser","Navbar","bg","variant","expand","Brand","Toggle","aria-controls","Collapse","Nav","className","Link","as","to","onClick","Text","Component","Index","Profile","age","email","level","Button","experience","SignupForm","handleSubmit","e","preventDefault","state","theNewUser","data","setState","role","history","push","response","message","handleInputChange","target","name","value","renderSpecificFields","renderTeacherFields","renderUserFields","Form","Group","Label","Control","type","onChange","Container","onSubmit","LoginForm","theLoggedUser","EditUser","theEditedUser","getOne","id","DeleteLesson","newLesson","title","description","location","participants","editLesson","editEvent","geoLocation","newEvent","getAllLessons","EmailButton","bind","teacher","window","open","LessonCard","renderOfferFields","renderButtonCondition","_id","renderEditButton","SignUpHandler","creatorIdUser","creatorIdTeacher","Col","md","Dashboard","componentDidMount","updatePostList","allLessonsDB","teacherLessons","filter","userLessons","userId","ownUserLessons","lessons","Row","lg","map","key","DeleteLessonHandler","React","NewLesson","EditLesson","allLessonsFromDB","find","match","params","editLessonHandler","theUpdatedPost","theEditedPost","App","setTheUser","fetchUser","theLoggedInUserFromTheServer","exact","path","component","render","Signup","Login","Boolean","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b38381e0.chunk.js","sourcesContent":["import axios from \"axios\";\n\nexport default class Services {\n  constructor() {\n    this._service = axios.create({\n      baseURL: process.env.REACT_APP_URL,\n      withCredentials: true\n    });\n  }\n\n  signup = user => this._service.post(\"/auth/signup\", { user });\n\n  editUser = user => this._service.post(\"/auth/editUser\", { user });\n\n  login = (username, password) =>\n    this._service.post(\"/auth/login\", { username, password });\n\n  loggedin = () => this._service.get(\"/auth/loggedin\");\n\n  logout = () => this._service.post(\"/auth/logout\");\n}\n","import React, { Component } from 'react'\nimport { Navbar, Nav } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport Service from '../../service/Auth.service'\n\nclass Navigation extends Component {\n\n    constructor(props) {\n        super(props)\n        this._service = new Service()\n    }\n\n    logoutUser = () => {\n        this._service.logout()\n            .then(x => this.props.setUser(false))\n            .catch(err => console.log(err))\n    }\n\n    render() {\n        const saludo = this.props.loggedInUser ? this.props.loggedInUser.username : 'Guest'\n\n        return (\n\n            this.props.loggedInUser ?\n\n                <Navbar bg=\"dark\" variant=\"dark\" expand=\"md\">\n                    <Navbar.Brand>SnowApp</Navbar.Brand>\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                    <Navbar.Collapse>\n                        <Nav className=\"mr-auto\">\n                            <Nav.Link as=\"li\"><Link to=\"/\">Index</Link></Nav.Link>\n                            <Nav.Link as=\"li\"><Link to=\"/profile\">Profile</Link></Nav.Link>\n                            <Nav.Link as=\"li\" onClick={this.logoutUser}>Logout</Nav.Link>\n                        </Nav>\n                        <Nav className=\"ml-auto\">\n                            <Navbar.Text>Welcome {saludo}</Navbar.Text>\n                        </Nav>\n                    </Navbar.Collapse>\n                </Navbar>\n\n                :\n\n                <Navbar bg=\"dark\" variant=\"dark\" expand=\"md\">\n                    <Navbar.Brand>Snow App!</Navbar.Brand>\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                    <Navbar.Collapse>\n                        <Nav className=\"mr-auto\">\n                            <Nav.Link as=\"li\"><Link to=\"/\">Index</Link></Nav.Link>\n                            <Nav.Link as=\"li\"><Link to=\"/signup\">Register</Link></Nav.Link>\n                            <Nav.Link as=\"li\"><Link to=\"/login\">Login</Link></Nav.Link>\n                        </Nav>\n                        <Nav className=\"ml-auto\">\n                            <Navbar.Text>Welcome {saludo}</Navbar.Text>\n                        </Nav>\n                    </Navbar.Collapse>\n                </Navbar>\n        )\n    }\n}\n\nexport default Navigation","import React from 'react'\n\nconst Index = () => {\n    return (\n        <div>\n            <h1>Snow App!</h1>      \n    </div>\n    )\n}\n\nexport default Index","import React from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\n\nconst Profile = props => {\n  if (props.loggedInUser.age > 0) {\n    return (\n      <>\n        <h1>Welcome {props.loggedInUser.username}</h1>\n        <h1>Email :{props.loggedInUser.email}</h1>\n        <h1>Your are {props.loggedInUser.age} years old</h1>\n        <h1>Your skill level is :{props.loggedInUser.level}</h1>\n        <Button variant=\"dark\" as={Link} to=\"/editUser\">\n          Edit profile\n        </Button>\n        <br></br>\n        <hr></hr>\n        <Button variant=\"dark\" as={Link} to=\"/createEvent\">\n          Create event\n        </Button>\n        <br></br>\n        <hr></hr>\n        <Button variant=\"dark\" as={Link} to=\"/createLesson\">\n          Create lesson demand\n        </Button>\n        <br></br>\n        <hr></hr>\n        <Button variant=\"dark\" as={Link} to=\"/main\">\n          View lesson offers\n        </Button>\n      </>\n    );\n  } else {\n    return (\n      <>\n        <h1>Welcome {props.loggedInUser.username}</h1>\n        <h1>Email :{props.loggedInUser.email}</h1>\n        <h1>Your experience is :{props.loggedInUser.experience}</h1>\n        <Button variant=\"dark\" as={Link} to=\"/editUser\">\n          Edit profile\n        </Button>\n        <br></br>\n        <hr></hr>\n        <Button variant=\"dark\" as={Link} to=\"/createEvent\">\n          Create event\n        </Button>\n        <br></br>\n        <hr></hr>\n        <Button variant=\"dark\" as={Link} to=\"/createLesson\">\n          Create lesson offer\n        </Button>\n        <br></br>\n        <hr></hr>\n        <Button variant=\"dark\" as={Link} to=\"/main\">\n          View lesson demands\n        </Button>\n      </>\n    );\n  }\n};\nexport default Profile;\n","import React, { Component } from \"react\";\nimport { Button, Form, Container } from \"react-bootstrap\";\nimport Service from \"../../service/Auth.service\";\n\nclass SignupForm extends Component {\n  constructor(props) {\n    super(props);\n    this._service = new Service();\n    this.state = {\n      username: \"\",\n      password: \"\",\n      age: \"\",\n      level: \"\",\n      email: \"\",\n      experience: \"\",\n      role: \"\"\n    };\n  }\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this._service\n      .signup(this.state)\n      .then(theNewUser => {\n        this.props.setUser(theNewUser.data);\n        this.setState({\n          username: \"\",\n          password: \"\",\n          age: \"\",\n          level: \"\",\n          email: \"\",\n          experience: \"\",\n          role: \"\"\n        });\n        this.props.history.push(\"/profile\");\n      })\n      .catch(err => console.log(err.response.data.message));\n  };\n\n  handleInputChange = e => {\n    let { name, value } = e.target;\n    this.setState({ [name]: value });\n  };\n\n  renderSpecificFields = () =>\n    this.state.role === \"Teacher\"\n      ? this.renderTeacherFields()\n      : this.renderUserFields();\n\n  renderTeacherFields = () => (\n    <Form.Group>\n      <Form.Label>Experience as teacher</Form.Label>\n      <Form.Control\n        type=\"text\"\n        name=\"experience\"\n        onChange={this.handleInputChange}\n        value={this.state.experience}\n      />\n    </Form.Group>\n  );\n\n  renderUserFields = () => {\n    return (\n      <>\n        <Form.Group>\n          <Form.Label>Age</Form.Label>\n          <Form.Control\n            type=\"number\"\n            name=\"age\"\n            onChange={this.handleInputChange}\n            value={this.state.age}\n          />\n        </Form.Group>\n        <Form.Group>\n          <Form.Label>Level</Form.Label>\n          <Form.Control\n            as=\"select\"\n            onChange={this.handleInputChange}\n            name=\"level\"\n          >\n            <option type=\"text\"></option>\n            <option type=\"text\">Amateur</option>\n            <option type=\"text\">Medium</option>\n            <option type=\"text\">Pro</option>\n          </Form.Control>\n        </Form.Group>\n      </>\n    );\n  };\n\n  render() {\n    return (\n      <Container>\n        <h1>Sign Up</h1>\n\n        <Form.Label>Select Role</Form.Label>\n\n        <Form.Control as=\"select\" onChange={this.handleInputChange} name=\"role\">\n          <option type=\"text\"></option>\n          <option type=\"text\">Teacher</option>\n          <option type=\"text\">User</option>\n        </Form.Control>\n\n        <Form onSubmit={this.handleSubmit}>\n          <Form.Group>\n            <Form.Label>User name</Form.Label>\n            <Form.Control\n              type=\"text\"\n              name=\"username\"\n              onChange={this.handleInputChange}\n              value={this.state.username}\n            />\n          </Form.Group>\n          <Form.Group>\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              type=\"password\"\n              name=\"password\"\n              onChange={this.handleInputChange}\n              value={this.state.password}\n            />\n          </Form.Group>\n          <Form.Group>\n            <Form.Label>Email</Form.Label>\n            <Form.Control\n              type=\"email\"\n              name=\"email\"\n              onChange={this.handleInputChange}\n              value={this.state.email}\n            />\n          </Form.Group>\n\n          {this.renderSpecificFields()}\n          <Button variant=\"dark\" type=\"submit\">\n            Register\n          </Button>\n        </Form>\n      </Container>\n    );\n  }\n}\n\nexport default SignupForm;\n","import React, { Component } from \"react\";\nimport { Button, Form, Container } from \"react-bootstrap\";\nimport Service from \"../../service/Auth.service\";\n\nclass LoginForm extends Component {\n  constructor(props) {\n    super(props);\n    this._service = new Service();\n    this.state = {\n      user: { username: \"\", password: \"\" }\n    };\n  }\n\n  handleInputChange = e => {\n    let { name, value } = e.target;\n    this.setState({\n      user: { ...this.state.user, [name]: value }\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const { username, password } = this.state.user;\n    this._service.login(username, password).then(theLoggedUser => {\n      this.props.setUser(theLoggedUser.data);\n      this.setState({ username: \"\", password: \"\" });\n      this.props.history.push(\"/profile\");\n    });\n  };\n\n  render() {\n    return (\n      <Container>\n        <h1>Log in</h1>\n        <Form onSubmit={this.handleSubmit}>\n          <Form.Group>\n            <Form.Label>User name</Form.Label>\n            <Form.Control\n              type=\"text\"\n              name=\"username\"\n              onChange={this.handleInputChange}\n              value={this.state.username}\n            />\n          </Form.Group>\n          <Form.Group>\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              type=\"text\"\n              name=\"password\"\n              onChange={this.handleInputChange}\n              value={this.state.password}\n            />\n          </Form.Group>\n          <Button variant=\"dark\" type=\"submit\">\n            Log in\n          </Button>\n        </Form>\n      </Container>\n    );\n  }\n}\n\nexport default LoginForm;\n","import React, { Component } from \"react\";\nimport { Button, Form, Container } from \"react-bootstrap\";\nimport Service from \"../../service/Auth.service\";\n\nclass EditUser extends Component {\n  constructor(props) {\n    super(props);\n    this._service = new Service();\n    this.state = {\n      username: props.loggedInUser.username,\n      email: props.loggedInUser.email,\n      age: props.loggedInUser.age,\n      level: props.loggedInUser.level,\n      experience: props.loggedInUser.experience,\n      role: props.loggedInUser.role\n    };\n  }\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this._service\n      .editUser(this.state)\n      .then(theEditedUser => {\n        this.setState(\n          { username: \"\", email: \"\", age: \"\", level: \"\", experience: \"\" },\n          () => this.props.setUser(theEditedUser.data)\n        );\n        this.props.history.push(\"/profile\");\n      })\n      .catch(err => console.log({ err }));\n  };\n\n  handleInputChange = e => {\n    let { name, value } = e.target;\n    this.setState({ [name]: value });\n  };\n\n  renderSpecificFields = () =>\n    this.props.loggedInUser.age > 0\n      ? this.renderTeacherFields()\n      : this.renderUserFields();\n\n  renderUserFields = () => (\n    <Form.Group>\n      <Form.Label>Experience as teacher</Form.Label>\n      <Form.Control\n        type=\"text\"\n        name=\"experience\"\n        onChange={this.handleInputChange}\n        value={this.state.experience}\n      />\n    </Form.Group>\n  );\n\n  renderTeacherFields = () => {\n    return (\n      <>\n        <Form.Group>\n          <Form.Label>Age</Form.Label>\n          <Form.Control\n            type=\"number\"\n            name=\"age\"\n            onChange={this.handleInputChange}\n            value={this.state.age}\n          />\n        </Form.Group>\n        <Form.Group>\n          <Form.Label>Skill level</Form.Label>\n          <Form.Control\n            as=\"select\"\n            onChange={this.handleInputChange}\n            value={this.state.level}\n            name=\"level\"\n          >\n            <option type=\"text\"></option>\n            <option type=\"text\">Amateur</option>\n            <option type=\"text\">Medium</option>\n            <option type=\"text\">Pro</option>\n          </Form.Control>\n        </Form.Group>\n      </>\n    );\n  };\n  render() {\n    return (\n      <>\n        <Container>\n          <h1>Edit User</h1>\n          <Form onSubmit={this.handleSubmit}>\n            <Form.Group>\n              <Form.Label>User</Form.Label>\n              <Form.Control\n                type=\"text\"\n                name=\"username\"\n                onChange={this.handleInputChange}\n                value={this.state.username}\n              />\n            </Form.Group>\n            <Form.Group>\n              <Form.Label>Email</Form.Label>\n              <Form.Control\n                type=\"text\"\n                name=\"email\"\n                onChange={this.handleInputChange}\n                value={this.state.email}\n              />\n            </Form.Group>\n            {this.renderSpecificFields()}\n            <Button variant=\"dark\" type=\"submit\">\n              Editar\n            </Button>\n          </Form>\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default EditUser;\n","import axios from \"axios\";\n\nexport default class Services {\n  constructor() {\n    this._service = axios.create({\n      baseURL: process.env.REACT_APP_URL,\n      withCredentials: true\n    });\n  }\n\n  getOne = id => this._service.get(`/lesson/${id}`);\n\n  DeleteLesson = id => {\n    return this._service.post(\"/lesson/delete\", { id });\n  };\n\n  newLesson = (title, description, location, participants, user) => {\n    return this._service.post(\"/lesson/createLesson\", {\n      title,\n      description,\n      location,\n      participants,\n      user\n    });\n  };\n\n  editLesson = (id, title, description, location, participants) => {\n    return this._service.post(\"/lesson/edit\", {\n      id,\n      title,\n      description,\n      location,\n      participants\n    });\n  };\n\n  editEvent = (id, title, description, geoLocation) => {\n    return this._service.post(\"/lesson/edit\", {\n      id,\n      title,\n      description,\n      geoLocation\n    });\n  };\n\n  newEvent = (title, description, geoLocation, user) => {\n    return this._service.post(\"/lesson/createEvent\", {\n      title,\n      description,\n      geoLocation,\n      user\n    });\n  };\n\n  getAllLessons = () => this._service.get(\"/lesson/getAllLessons\");\n}\n","import React, { Component } from \"react\";\nimport Service from \"../../service/Lesson.service\";\nimport { Button } from \"react-bootstrap\";\n\nclass EmailButton extends Component {\n  constructor(props) {\n    super(props);\n    this.onClick = this.onClick.bind(this);\n  }\n\n  onClick() {\n    if (this.props.value.teacher) {\n      window.open(`mailto:${this.props.value.teacher.email}`);\n    } else {\n      window.open(`mailto:${this.props.value.user.email}`);\n    }\n  }\n\n  render() {\n    return (\n      <Button variant=\"dark\" target=\"_blank\" onClick={this.onClick}>\n        Send Mail\n      </Button>\n    );\n  }\n}\n\nexport default EmailButton;\n","import React, { Component } from \"react\";\nimport { Col } from \"react-bootstrap\";\nimport EmailButton from \"../ui/EmailButton\";\nimport { Link } from \"react-router-dom\";\nimport { Button, Form } from \"react-bootstrap\";\n\nclass LessonCard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      _id: props._id,\n      loggedInUser: props.loggedInUser,\n      title: props.title,\n      description: props.description,\n      location: props.location,\n      participants: props.participants,\n      user: props.creatorIdUser,\n      teacher: props.creatorIdTeacher\n    };\n  }\n\n  renderSpecificFields = () =>\n    this.state.participants ? this.renderOfferFields() : null;\n\n  renderOfferFields = () => (\n    <Form.Group>\n      <p>participants: {this.state.participants}</p>\n    </Form.Group>\n  );\n\n  renderButtonCondition = () => {\n    if (\n      this.state.user &&\n      this.state.user._id === this.state.loggedInUser._id\n    ) {\n      return this.renderEditButton();\n    } else if (\n      this.state.teacher &&\n      this.state.teacher._id === this.state.loggedInUser._id\n    ) {\n      return this.renderEditButton();\n    }\n  };\n\n  renderEditButton = () => (\n    <Link to={`/delete/${this.state._id}`}>\n      <Button variant=\"dark\" type=\"button\">\n        Edit Lesson\n      </Button>\n    </Link>\n  );\n\n  SignUpHandler = () => {\n    console.log(this.state.participants);\n    // this.state.participants == 0 ? alert(\"sorry class is full\") : null;\n    this.state.participants--;\n  };\n  render() {\n    const email = this.state.user\n      ? this.state.user.email\n      : this.state.teacher.email;\n\n    return (\n      <Col className=\"post-card\" md={6}>\n        <h3>{this.state.title}</h3>\n        <p>Descripcion: {this.state.description}</p>\n        <p>Localizacion: {this.state.location}</p>\n        {this.renderSpecificFields()}\n        <p>mail: {email}</p>\n        <EmailButton value={this.state} />\n        {this.renderButtonCondition()}\n        <Button variant=\"warning\" onClick={this.SignUpHandler}>\n          Sign up\n        </Button>\n      </Col>\n    );\n  }\n}\n\nexport default LessonCard;\n","import React from \"react\";\nimport Service from \"../../service/Lesson.service\";\nimport { Container, Row } from \"react-bootstrap\";\nimport LessonCard from \"./LessonCard\";\n\nclass Dashboard extends React.Component {\n  constructor(props) {\n    super(props);\n    this._service = new Service();\n    this.state = {\n      loggedInUser: props.loggedInUser,\n      lessons: []\n    };\n  }\n\n  componentDidMount = () => this.updatePostList();\n\n  updatePostList = () => {\n    this._service\n      .getAllLessons()\n      .then(allLessonsDB => {\n        let teacherLessons = allLessonsDB.data.filter(e => e.creatorIdTeacher);\n        let userLessons = allLessonsDB.data.filter(e => e.creatorIdUser);\n        \n        let userId = this.props.loggedInUser._id;\n\n        let ownUserLessons = allLessonsDB.data.filter(e => {\n          if (e.creatorIdUser) return e.creatorIdUser._id == userId;\n        });\n        let ownTeacherLessons = allLessonsDB.data.filter(e => {\n          if (e.creatorIdTeacher) return e.creatorIdTeacher._id == userId;\n        });\n        console.log(ownUserLessons);\n        this.props.loggedInUser && this.props.loggedInUser.role === \"Teacher\"\n          ? this.setState({ lessons: userLessons })\n          : this.setState({ lessons: teacherLessons });\n      })\n      .catch(err => console.log(\"Error\", err));\n  };\n\n  render() {\n    return (\n      <>\n        <Container>\n          <h1>Dashboard</h1>\n          <Row lg={4}>\n            {this.state.lessons.map(post => (\n              <LessonCard\n                key={post._id}\n                {...post}\n                DeleteLesson={this.DeleteLessonHandler}\n                loggedInUser={this.props.loggedInUser}\n              />\n            ))}\n          </Row>\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default Dashboard;\n","import React, { Component } from \"react\";\nimport { Button, Form, Container } from \"react-bootstrap\";\nimport Service from \"../../service/Lesson.service\";\n\nclass NewLesson extends Component {\n  constructor(props) {\n    super(props);\n    this._service = new Service();\n    this.state = {\n      post: { title: \"\", description: \"\", location: \"\", participants: \"\" }\n    };\n  }\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const { title, description, location, participants } = this.state.post;\n    this._service\n      .newLesson(\n        title,\n        description,\n        location,\n        participants,\n        this.props.loggedInUser\n      )\n      .then(x => {\n        // this.props.closeModalWindow()\n        // this.props.updatePostList()\n        this.props.history.push(\"/main\");\n      })\n      .catch(err => console.log(err));\n  };\n\n  handleInputChange = e => {\n    let { name, value } = e.target;\n    this.setState({\n      post: { ...this.state.post, [name]: value }\n    });\n  };\n\n  renderSpecificFields = () =>\n    this.props.loggedInUser && this.props.loggedInUser.role === \"Teacher\"\n      ? this.renderTeacherFields()\n      : this.renderUserFields();\n\n  renderTeacherFields = () => (\n    <Form.Group>\n      <h1>Post lesson offer</h1>\n      <Form.Label>Number of participants</Form.Label>\n      <Form.Control\n        type=\"number\"\n        name=\"participants\"\n        onChange={this.handleInputChange}\n        value={this.state.participants}\n      />\n    </Form.Group>\n  );\n\n  renderUserFields = () => <h1>Post lesson demand</h1>;\n\n  render() {\n    console.log(this.state);\n\n    return (\n      <Container>\n        {this.renderSpecificFields()}\n\n        <Form onSubmit={this.handleSubmit}>\n          <Form.Group>\n            <Form.Label>Title</Form.Label>\n            <Form.Control\n              type=\"text\"\n              name=\"title\"\n              onChange={this.handleInputChange}\n              value={this.state.title}\n            />\n          </Form.Group>\n          <Form.Group>\n            <Form.Label>Description</Form.Label>\n            <Form.Control\n              type=\"text\"\n              name=\"description\"\n              onChange={this.handleInputChange}\n              value={this.state.description}\n            />\n          </Form.Group>\n          <Form.Group>\n            <Form.Label>Location</Form.Label>\n            <Form.Control\n              type=\"text\"\n              name=\"location\"\n              onChange={this.handleInputChange}\n              value={this.state.location}\n            />\n          </Form.Group>\n          <Button variant=\"dark\" type=\"submit\">\n            Publish\n          </Button>\n        </Form>\n      </Container>\n    );\n  }\n}\n\nexport default NewLesson;\n","import React, { Component } from \"react\";\nimport { Button, Form, Container } from \"react-bootstrap\";\nimport Service from \"../../service/Lesson.service\";\n\nclass EditLesson extends Component {\n  constructor(props) {\n    super(props);\n    this._service = new Service();\n    this.state = {\n      _id: \"\",\n      title: \"\",\n      description: \"\",\n      location: \"\",\n      participants: \"\",\n      creatorIdUser: \"\",\n      creatorIdTeacher: \"\"\n    };\n  }\n\n  handleInputChange = e => {\n    let { name, value } = e.target;\n    this.setState({ [name]: value });\n  };\n\n  componentDidMount = () => this.updatePostList();\n\n  updatePostList = () => {\n    this._service\n      .getAllLessons()\n      .then(allLessonsFromDB => {\n        const post = allLessonsFromDB.data.find(\n          post => post._id === this.props.match.params.id\n        );\n        this.setState(post);\n      })\n      .catch(err => console.log(\"Error\", err));\n  };\n\n  editLessonHandler = () => {\n    let id = this.props.match.params.id;\n    const { title, description, location, participants } = this.state;\n    this._service\n      .editLesson(id, title, description, location, participants)\n      .then(theUpdatedPost => console.log(theUpdatedPost))\n      .catch(err => console.log({ err }));\n    this.updatePostList();\n    this.props.history.push(\"/main\");\n  };\n\n  DeleteLessonHandler = () => {\n    this._service.DeleteLesson(this.props.match.params.id);\n    this.updatePostList();\n    this.props.history.push(\"/main\");\n  };\n\n  componentDidMount() {\n    console.log(this.props.match.params.id);\n    this._service\n      .getOne(this.props.match.params.id)\n      .then(theEditedPost => this.setState(theEditedPost.data))\n      .catch(err => console.log({ err }));\n  }\n\n  render() {\n    return (\n      <Container>\n        <h1>Edit Lesson</h1>\n        <Form onSubmit={this.handleSubmit}>\n          <Form.Group>\n            <Form.Label>Title</Form.Label>\n            <Form.Control\n              type=\"text\"\n              name=\"title\"\n              onChange={this.handleInputChange}\n              value={this.state.title}\n            />\n          </Form.Group>\n          <Form.Group>\n            <Form.Label>Description</Form.Label>\n            <Form.Control\n              type=\"text\"\n              name=\"description\"\n              onChange={this.handleInputChange}\n              value={this.state.description}\n            />\n          </Form.Group>\n          <Form.Group>\n            <Form.Label>Location</Form.Label>\n            <Form.Control\n              type=\"text\"\n              name=\"location\"\n              onChange={this.handleInputChange}\n              value={this.state.location}\n            />\n          </Form.Group>\n          <Form.Group>\n            <Form.Label>Participants</Form.Label>\n            <Form.Control\n              type=\"number\"\n              name=\"participants\"\n              onChange={this.handleInputChange}\n              value={this.state.participants}\n            />\n          </Form.Group>\n          <Button variant=\"warning\" onClick={this.DeleteLessonHandler}>\n            Delete\n          </Button>\n          <Button variant=\"dark\" onClick={this.editLessonHandler}>\n            Save\n          </Button>\n        </Form>\n      </Container>\n    );\n  }\n}\n\nexport default EditLesson;\n","import React, { Component } from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport Service from \"./service/Auth.service\";\n\n/* UI COMPONENTS */\nimport Navbar from \"./components/ui/Navbar\";\n\n/* PAGE COMPONENTS */\nimport Index from \"./components/pages/Index\";\nimport Profile from \"./components/pages/Profile\";\n\n/* AUTH COMPONENTS */\nimport Signup from \"./components/auth/Signup\";\nimport Login from \"./components/auth/Login\";\nimport EditUser from \"./components/auth/EditUser\";\n\n/* CUSTOM AUTH COMPONENTS */\nimport Dashboard from \"./components/lessons/Dashboard\";\nimport NewLesson from \"./components/lessons/NewLesson\";\n// import NewEvent from \"./components/events/NewEvent\";\nimport EditLesson from \"./components/lessons/EditLesson\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = { loggedInUser: null };\n    this._service = new Service();\n  }\n\n  setTheUser = user => {\n    this.setState({ loggedInUser: user });\n    console.log(\n      \"El método 'setTheUser' de App.js se ha invocado, pasando al estado 'loggedInUser:\",\n      this.state.loggedInUser\n    );\n  };\n\n  fetchUser = () => {\n    if (this.state.loggedInUser === null) {\n      this._service\n        .loggedin()\n        .then(theLoggedInUserFromTheServer =>\n          this.setState({ loggedInUser: theLoggedInUserFromTheServer.data })\n        )\n        .catch(err => {\n          this.setState({ loggedInUser: false });\n          console.log({ err });\n        });\n    }\n  };\n\n  render() {\n    this.fetchUser();\n\n    return (\n      <>\n        <Navbar\n          loggedInUser={this.state.loggedInUser}\n          setUser={this.setTheUser}\n        />\n\n        <Switch>\n          <Route exact path=\"/\" component={Index} />\n\n          <Route\n            exact\n            path=\"/signup\"\n            render={match => <Signup setUser={this.setTheUser} {...match} />}\n          />\n\n          <Route\n            path=\"/login\"\n            render={match => <Login setUser={this.setTheUser} {...match} />}\n          />\n\n          <Route\n            path=\"/profile\"\n            render={() =>\n              this.state.loggedInUser ? (\n                <Profile loggedInUser={this.state.loggedInUser} />\n              ) : (\n                <Redirect to=\"/\" />\n              )\n            }\n          />\n\n          {/* //fuera */}\n          <Route\n            path=\"/editUser\"\n            render={match =>\n              this.state.loggedInUser ? (\n                <EditUser\n                  loggedInUser={this.state.loggedInUser}\n                  {...match}\n                  setUser={this.setTheUser}\n                />\n              ) : (\n                <Redirect to=\"/\" />\n              )\n            }\n          />\n\n          <Route\n            path=\"/createLesson\"\n            render={match => (\n              <NewLesson {...match} loggedInUser={this.state.loggedInUser} />\n            )}\n          />\n          {/* \n          <Route\n            path=\"/createEvent\"\n            render={match => (\n              <NewEvent {...match} loggedInUser={this.state.loggedInUser} />\n            )}\n          /> */}\n\n          <Route\n            path=\"/delete/:id\"\n            render={match => (\n              <EditLesson {...match} loggedInUser={this.state.loggedInUser} />\n            )}\n          />\n\n          <Route\n            path=\"/edit/:id\"\n            render={match => (\n              <EditLesson {...match} loggedInUser={this.state.loggedInUser} />\n            )}\n          />\n\n          {/* <Route path=\"/editMap/:id\" render={match => <EditMap {...match} loggedInUser={this.state.loggedInUser} />} /> */}\n\n          {/* /fuera */}\n\n          <Route\n            path=\"/main\"\n            render={match => (\n              <Dashboard {...match} loggedInUser={this.state.loggedInUser} />\n            )}\n          />\n        </Switch>\n      </>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { BrowserRouter as Router } from 'react-router-dom'\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport './index.css';\n\nReactDOM.render(\n    <Router>\n        <App />\n    </Router>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}